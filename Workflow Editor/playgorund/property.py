# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\Workflow Editor\tests\property.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import datetime

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QSpinBox, QLineEdit, QTimeEdit
import json


class Ui_DockWidget(object):
    def __init__(self, data=None):
        print("DDD")
        super(Ui_DockWidget, self).__init__()
        self.data = data
        print(type(self.data))
        self.callback = self.data["callback"]

    def setupUi(self, DockWidget):
        DockWidget.setObjectName("Properties")
        DockWidget.resize(527, 423)
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.treeWidget = QtWidgets.QTreeWidget(self.dockWidgetContents)
        self.treeWidget.setGeometry(QtCore.QRect(0, 0, 531, 401))
        self.treeWidget.setMidLineWidth(1)
        self.treeWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.treeWidget.setItemsExpandable(True)
        self.treeWidget.setObjectName("treeWidget")
        # self.treeWidget.set

        self.treeWidget.header().setVisible(True)
        self.treeWidget.header().setHighlightSections(True)
        DockWidget.setWidget(self.dockWidgetContents)

        self.retranslateUi(DockWidget)
        if self.data is not None:
            self.build_tree()
        QtCore.QMetaObject.connectSlotsByName(DockWidget)

    def retranslateUi(self, DockWidget):
        _translate = QtCore.QCoreApplication.translate
        DockWidget.setWindowTitle(_translate("DockWidget", "DockWidget"))
        self.treeWidget.headerItem().setText(0, _translate("DockWidget", "Property"))
        self.treeWidget.headerItem().setText(1, _translate("DockWidget", "Value"))
        __sortingEnabled = self.treeWidget.isSortingEnabled()
        self.treeWidget.setSortingEnabled(False)
        # self.treeWidget.topLevelItem(0).setText(0, _translate("DockWidget", "!!!"))
        # self.treeWidget.topLevelItem(0).setText(1, _translate("DockWidget", "44"))
        self.treeWidget.setSortingEnabled(__sortingEnabled)

    def build_tree(self):
        # self.callback is in the init function
        for section in self.data["sections"]:
            self.create_section(section)
        # TODO : add button with save

    def create_section(self, section):
        functions = {
            "Text": self.create_text_input_widget,
            "time" :self.create_time_input_widget,
        }
        main_section_widget = QtWidgets.QTreeWidgetItem(self.treeWidget)
        print(f"sedction name: {section['name']}")
        main_section_widget.setText(0, section["name"])
        for field in section["fields"]:
            filed_line = QtWidgets.QTreeWidgetItem(main_section_widget)
            filed_line.setText(0,field["name"])
            print(field)
            print(field["type"])
            if  field["type"] in functions.keys():
                functions[field["type"]](filed_line,field)

            # TODO switch case for every type. send main_section_widget object to this function so it will be QtWidgets.QTreeWidgetItem(main_section_widget)
            # item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
            # widget = QSpinBox()
            # widget.setValue(5)
            # self.treeWidget.setItemWidget(father: item_0,row: 1,widget: widget)
            pass

    def create_text_input_widget(self, father, field):
        print(f"create_text_input_widget:: {field}")
        widget = QLineEdit()
        widget.setText(field["value"])
        self.treeWidget.setItemWidget(father,1,widget)

    def create_time_input_widget(self, father, field):
        print(f"create_time_input_widget:: {field}")
        widget = QTimeEdit()
        widget.setTime(field["value"])
        self.treeWidget.setItemWidget(father,1,widget)

if __name__ == "__main__":
    data = {
        "sections": [{
            "name": "node details",
            "fields": [
                {"name": "title", "type": "Text", "value": ""},
                {"name": "time", "type": "time", "value": datetime.time(hour=1,minute=50)},
                {"name": "actor_in_charge", "type": "combobox",
                 "options": ["Nurse", "Doctor", "Participant", "Investigator", "Lab Technician"], "value": "Nurse"},
                {"name": "actors", "type": "checkboxes_list",
                 "options": ["Nurse", "Doctor", "Participant", "Investigator", "Lab Technician"], "value": []}
            ]},
            {
                "name": "Simple String",
                "fields": [
                    {"name" : "text","type":"Text","value":""}
                ]
            }

        ],
        "callback": "g"

    }
    import sys

    app = QtWidgets.QApplication(sys.argv)
    DockWidget = QtWidgets.QDockWidget()
    ui = Ui_DockWidget(data=data)

    ui.setupUi(DockWidget)
    DockWidget.show()
    sys.exit(app.exec_())
